@using Microsoft.AspNetCore.SignalR.Client
@using SignalR.Modules.Client;
@page "/chat"
@inherits OwningComponentBase<ChatHubClient>
@inject HttpClient Http

<div class="form-group">
	<label>
		User:
		<input @bind="userInput" />
	</label>
</div>
<div class="form-group">
	<label>
		Message:
		<input @bind="messageInput" size="50" />
	</label>
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Send (SignalR)</button>
<button @onclick="SendHttp" disabled="@(!IsConnected)">Send (Http)</button>

<hr>

<ul id="messagesList">
	@foreach (var message in messages)
	{
	 <li>@message</li>
	}
</ul>

@code {
	private List<string> messages = new List<string>();
	private string userInput;
	private string messageInput;

	private ChatHubClient ChatHub => Service;

	protected override async Task OnInitializedAsync()
	{
		ChatHub.On<string, string>("ReceiveMessage", (user, message) =>
		{
			var encodedMsg = $"{user}: {message}";
			messages.Add(encodedMsg);
			StateHasChanged();
		});

		await ChatHub.EnsureConnectionStartedAsync();
	}

	async Task Send() =>
		await ChatHub.SendAsync("SendMessage", userInput, messageInput);

	async Task SendHttp() =>
		await Http.GetAsync($"/api/Chat?user={userInput}&message={messageInput}");

	public bool IsConnected =>
		ChatHub.State == HubConnectionState.Connected;
}